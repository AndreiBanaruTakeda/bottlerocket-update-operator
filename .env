# Example .env file

BRUPOP_CONTAINER_IMAGE=public.ecr.aws/bottlerocket/bottlerocket-update-operator:v1.1.0

# If testing against a private image registry, you can set the pull secret to fetch images.
# This can likely remain as `brupop` so long as you run something like the following:
# kubectl create secret docker-registry brupop \
#  --docker-server 109276217309.dkr.ecr.us-west-2.amazonaws.com \
#  --docker-username=AWS \
#  --docker-password=$(aws --region us-west-2 ecr get-login-password) \
#  --namespace=brupop-bottlerocket-aws
# BRUPOP_CONTAINER_IMAGE_PULL_SECRET=brupop

# External load balancer setting.
# When EXCLUDE_FROM_LB_WAIT_TIME_IN_SEC is set to positive value
# brupop will exclude the node from load balancer and 
# wait for EXCLUDE_FROM_LB_WAIT_TIME_IN_SEC seconds before draining node.
EXCLUDE_FROM_LB_WAIT_TIME_IN_SEC=0

# Concurrent update nodes setting.
# When MAX_CONCURRENT_UPDATE is set to a positive integer value,
# brupop will concurrently update max MAX_CONCURRENT_UPDATE nodes.
# When MAX_CONCURRENT_UPDATE is set to "unlimited",
# brupop will concurrently update all nodes with respecting `PodDisruptionBudgets`
# Note: the "unlimited" option does not work well with `EXCLUDE_FROM_LB_WAIT_TIME_IN_SEC`
# option, which could potential exclude all nodes from load balancer at the same time.
MAX_CONCURRENT_UPDATE=1

# scheduler setting
# Brupop will operate node updates on scheduled maintenance windows by using cron expressions.
# When you set up the scheduler, you should follow cron expression rules.
# ┌───────────── seconds (0 - 59)
# | ┌───────────── minute (0 - 59)
# | │ ┌───────────── hour (0 - 23)
# | │ │ ┌───────────── day of the month (1 - 31)
# | │ │ │ ┌───────────── month (Jan, Feb, Mar, Apr, Jun, Jul, Aug, Sep, Oct, Nov, Dec)
# | │ │ │ │ ┌───────────── day of the week (Mon, Tue, Wed, Thu, Fri, Sat, Sun)
# | │ │ │ │ │ ┌───────────── year (formatted as YYYY)
# | │ │ │ │ │ |
# | │ │ │ │ │ |
# * * * * * * *
SCHEDULER_CRON_EXPRESSION="* * * * * * *"

# API Server ports
APISERVER_INTERNAL_PORT=8443
APISERVER_SERVICE_PORT=443
