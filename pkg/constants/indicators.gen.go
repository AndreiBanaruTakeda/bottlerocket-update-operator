// Code generated by "stringer -linecomment=true -type=NodeState,NodeAction,OperatorVersion,PlatformVersion -output indicators.gen.go"; DO NOT EDIT.

package constants

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeStateUnknown-0]
	_ = x[NodeStateRefreshing-1]
	_ = x[NodeStateUpToDate-2]
	_ = x[NodeStateUpdateAvailable-3]
	_ = x[NodeStateRebooting-4]
}

const _NodeState_name = "unknownrefreshingup-to-dateupdate-availablerebooting"

var _NodeState_index = [...]uint8{0, 7, 17, 27, 43, 52}

func (i NodeState) String() string {
	if i >= NodeState(len(_NodeState_index)-1) {
		return "NodeState(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeState_name[_NodeState_index[i]:_NodeState_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeActionUnknown-0]
	_ = x[NodeActionStablize-1]
	_ = x[NodeActionReset-2]
	_ = x[NodeActionPrepareUpdate-3]
	_ = x[NodeActionPerformUpdate-4]
	_ = x[NodeActionRebootUpdate-5]
}

const _NodeAction_name = "NodeActionUnknownstablizereset-stateprepare-updateperform-updatereboot-update"

var _NodeAction_index = [...]uint8{0, 17, 25, 36, 50, 64, 77}

func (i NodeAction) String() string {
	if i >= NodeAction(len(_NodeAction_index)-1) {
		return "NodeAction(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeAction_name[_NodeAction_index[i]:_NodeAction_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OperatorUnknown-0]
	_ = x[OperatorV1Alpha-1]
	_ = x[OperatorDevelopmentDoNotUseInProduction-2]
}

const _OperatorVersion_name = "0.0.0-unknown1.0.0-alpha1.0.0-zeta"

var _OperatorVersion_index = [...]uint8{0, 13, 24, 34}

func (i OperatorVersion) String() string {
	if i >= OperatorVersion(len(_OperatorVersion_index)-1) {
		return "OperatorVersion(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _OperatorVersion_name[_OperatorVersion_index[i]:_OperatorVersion_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PlatformUnknown-0]
	_ = x[PlatformV0-1]
	_ = x[PlatformV1Alpha-2]
	_ = x[PlatformV1AlphaNoOp-3]
	_ = x[PlatformDevelopmentDoNotUseInProduction-4]
}

const _PlatformVersion_name = "0.0.00.1.0-zeta1.0.0-alpha1.0.0-alpha+noop0.1.0-zeta"

var _PlatformVersion_index = [...]uint8{0, 5, 15, 26, 42, 52}

func (i PlatformVersion) String() string {
	if i >= PlatformVersion(len(_PlatformVersion_index)-1) {
		return "PlatformVersion(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _PlatformVersion_name[_PlatformVersion_index[i]:_PlatformVersion_index[i+1]]
}
